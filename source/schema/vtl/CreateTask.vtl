#set($ctx.args.input.description = $util.urlDecode($ctx.args.input.description))
#if( $ctx.args.input.description.length() > 250)
    $util.error("Value for description field cannot exceed 250 characters.")
#end

#foreach( $param in $ctx.args.input.parameters )
    #if( $param.ParameterKey == "srcBucket" || $param.ParameterKey == "destBucket" )
        $util.validate($util.matches("^(?!(^((\d{1,3}[.]){3}\d{1,3}$)|.*\.\.|.*\.-|.*-\.|.*\._|.*_\.))[a-z\d][\w.-]{1,253}[a-z\d]$", $param.ParameterValue), "Invalid Bucket Name")
    #elseif( $param.ParameterKey == "srcPrefix" || $param.ParameterKey == "destPrefix" )
    	#set($param.ParameterValue = $util.urlDecode($param.ParameterValue))
        $util.validate($util.matches("^.{0,1024}$", $param.ParameterValue), "Invalid Prefix")
    #elseif( $param.ParameterKey == "srcAccountId" || $param.ParameterKey == "destAccountId" )
        $util.validate($util.matches("^\d{12}$", $util.defaultIfNullOrEmpty($param.ParameterValue, '123456789012')), "Invalid Account ID")
    #elseif( $param.ParameterKey == "srcCredential" || $param.ParameterKey == "destCredential" )
        $util.validate($util.matches("^[\w/+=.@-]{0,1024}$", $param.ParameterValue), "Invalid Credential")
	#elseif ($param.ParameterKey == "srcRegion" || $param.ParameterKey == "destRegion" )
    	$util.validate($util.matches("^(?!(.*--))(?!(.*-$))[a-z0-9]([a-z0-9-]){0,62}$", $util.defaultIfNullOrEmpty($param.ParameterValue,'us-west-2')), "Invalid Region Name")
    #elseif ($param.ParameterKey == "ecsClusterName" )
    	$util.validate($util.matches("[a-zA-Z0-9-]{1,1024}", $param.ParameterValue), "Invalid ECS Cluster Name")
    #end
#end

{"version": "2017-02-28", "operation": "Invoke", "payload": $util.toJson($ctx)}